pipeline {
    agent any

    tools {
        nodejs "NODEJS"
    }

    environment {
        SCANNER_HOME = tool 'sonar-scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/WaelArfaaoui/AdminModule.git'
            }
        }

        stage('Install Angular CLI') {
            steps {
                sh 'npm install -g @angular/cli'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('Front') {
                    sh 'npm install'
                }
            }
        }

        stage('Install Sonar Scanner') {
            steps {
                dir('Front') {
                    sh 'npm install --save-dev sonar-scanner'
                }
            }
        }

        // stage('Run Unit Tests') {
        //     steps {
        //         dir('Front') {
        //             sh 'npm run test'
        //         }
        //     }
        // }

        stage('SonarQube Analysis') {
            steps {
                dir('Front') {
                    sh 'npm run sonar'
                }
            }
        }

        stage('Build Angular App') {
            steps {
                dir('Front') {
                    sh 'ng build --configuration production'
                }
            }
        }

        stage('Build & Tag Docker Image') {
            steps {
                dir('Front') {
                    script {
                        withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                            sh "docker build -t arfaoui01/admin-module-ui:1.0.1 ."
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('Front') {
                    script {
                        withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                            sh "docker push arfaoui01/admin-module-ui:1.0.1"
                        }
                    }
                }
            }
        }

        stage('Deploy To K8s') {
            steps {
             dir('Front') {
                withKubeConfig(caCertificate: '', clusterName: 'arfaoui-eks', contextName: '', credentialsId: 'k8-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://4893165EC733971DA96B9FF89872284A.gr7.us-east-2.eks.amazonaws.com') {
                    sh "kubectl apply -f admin-module-ui-deployment.yaml -n webapps"
                    sh "kubectl apply -f admin-module-ui-service.yaml -n webapps"
                    sleep 60
                }
             }
            }
        }

        stage('Verify Deployment') {
            steps {
             dir('Front') {
                withKubeConfig(caCertificate: '', clusterName: 'arfaoui-eks', contextName: '', credentialsId: 'k8-cred', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://4893165EC733971DA96B9FF89872284A.gr7.us-east-2.eks.amazonaws.com') {
                    sh "kubectl get pods -n webapps"
                    sh "kubectl get svc -n webapps"
                }
             }
            }
        }
    }
}
