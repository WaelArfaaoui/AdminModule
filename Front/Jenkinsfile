pipeline {
    agent any

    tools {nodejs "NODEJS"}

    environment {
        SCANNER_HOME = tool 'sonar-scanner'

    }

    stages {

         stage('Git Checkout') {
            steps {
                git branch: 'main', credentialsId: 'git-cred', url: 'https://github.com/WaelArfaaoui/AdminModule.git'
            }
        }

        stage('Install Angular CLI') {
            steps {
                sh 'npm install -g @angular/cli'
            }
        }

        stage('Install Dependencies') {
            steps {
                dir('Front') {
                    sh 'npm install'
                }
            }
        }

         stage('Install sonar') {
                       steps {
                                dir('Front') {
                                    sh 'npm install --save-dev sonar-scanner'
                                }
                            }
                }

        stage('Run Unit Tests') {
            steps {
                dir('Front') {
                    sh 'ng test --watch=false'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('Front') { 
                   withSonarQubeEnv('sonar'){
                   sh 'npm run sonar'
                } 
                }
            }
        }

        stage('Quality Gate') {
            steps {
                script {
                    waitForQualityGate abortPipeline: false, credentialsId: 'sonar-token'
                }
            }
        }

        stage('Build Angular App') {
            steps {
                dir('Front') {
                    sh 'ng build --configuration production'
                }
            }
        }

        stage('Build & Tag Docker Image') {
            steps {
                dir('Front') {
                    script {
                        withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                            sh "docker build -t arfaoui01/admin-module-ui:1.0.1 ."
                        }
                    }
                }
            }
        }

        stage('Push Docker Image') {
            steps {
                dir('Front') {
                    script {
                        withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                            sh "docker push arfaoui01/admin-module-ui:1.0.1"
                        }
                    }
                }
            }
        }

    }

}
